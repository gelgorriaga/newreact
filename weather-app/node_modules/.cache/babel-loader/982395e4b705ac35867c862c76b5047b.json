{"ast":null,"code":"var _jsxFileName = \"/Users/guillermoelgorriaga/Desktop/new react course/weather-app/src/index.js\";\nimport React, { Component } from \"react\";\nimport ReactDom from \"react-dom\";\nimport SeasonDisplay from \"./SeasonDisplay\";\nimport Spinner from \"./Spinner\";\nexport class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lat: null,\n      errorMessage: \"\"\n    };\n  } ///////////\n\n\n  componentDidMount() {\n    window.navigator.geolocation.getCurrentPosition(position => {\n      this.setState({\n        lat: position.coords.latitude\n      });\n    }, error => {\n      this.setState({\n        errorMessage: error.message\n      });\n    });\n  } ///////////\n\n\n  componentDidUpdate() {\n    console.log(\"component did updated\");\n  }\n\n  renderContent() {\n    if (this.state.errorMessage && !this.state.lat) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"Error: \", this.state.errorMessage);\n    }\n\n    if (!this.state.errorMessage && this.state.lat) {\n      return React.createElement(SeasonDisplay, {\n        lat: this.state.lat,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(Spinner, {\n      message: \"Loading...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    });\n  } ///////////\n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, this.renderContent());\n  }\n\n}\nReactDom.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46\n  },\n  __self: this\n}), document.querySelector(\"#root\"));","map":{"version":3,"sources":["/Users/guillermoelgorriaga/Desktop/new react course/weather-app/src/index.js"],"names":["React","Component","ReactDom","SeasonDisplay","Spinner","App","constructor","props","state","lat","errorMessage","componentDidMount","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","error","message","componentDidUpdate","console","log","renderContent","render","document","querySelector"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAO,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AACjCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,GAAG,EAAE,IADM;AAEXC,MAAAA,YAAY,EAAE;AAFH,KAAb;AAID,GARgC,CASjC;;;AACAC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,MAAM,CAACC,SAAP,CAAiBC,WAAjB,CAA6BC,kBAA7B,CACEC,QAAQ,IAAI;AACV,WAAKC,QAAL,CAAc;AAAER,QAAAA,GAAG,EAAEO,QAAQ,CAACE,MAAT,CAAgBC;AAAvB,OAAd;AACD,KAHH,EAIEC,KAAK,IAAI;AACP,WAAKH,QAAL,CAAc;AAAEP,QAAAA,YAAY,EAAEU,KAAK,CAACC;AAAtB,OAAd;AACD,KANH;AAQD,GAnBgC,CAoBjC;;;AACAC,EAAAA,kBAAkB,GAAG;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACD;;AAEDC,EAAAA,aAAa,GAAG;AACd,QAAI,KAAKjB,KAAL,CAAWE,YAAX,IAA2B,CAAC,KAAKF,KAAL,CAAWC,GAA3C,EAAgD;AAC9C,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAa,KAAKD,KAAL,CAAWE,YAAxB,CAAP;AACD;;AACD,QAAI,CAAC,KAAKF,KAAL,CAAWE,YAAZ,IAA4B,KAAKF,KAAL,CAAWC,GAA3C,EAAgD;AAC9C,aAAO,oBAAC,aAAD;AAAe,QAAA,GAAG,EAAE,KAAKD,KAAL,CAAWC,GAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AAED,WAAO,oBAAC,OAAD;AAAS,MAAA,OAAO,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAlCgC,CAoCjC;;;AACAiB,EAAAA,MAAM,GAAG;AACP,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKD,aAAL,EAAN,CAAP;AACD;;AAvCgC;AAyCnCvB,QAAQ,CAACwB,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAzB","sourcesContent":["import React, { Component } from \"react\";\nimport ReactDom from \"react-dom\";\nimport SeasonDisplay from \"./SeasonDisplay\";\nimport Spinner from \"./Spinner\";\nexport class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      lat: null,\n      errorMessage: \"\"\n    };\n  }\n  ///////////\n  componentDidMount() {\n    window.navigator.geolocation.getCurrentPosition(\n      position => {\n        this.setState({ lat: position.coords.latitude });\n      },\n      error => {\n        this.setState({ errorMessage: error.message });\n      }\n    );\n  }\n  ///////////\n  componentDidUpdate() {\n    console.log(\"component did updated\");\n  }\n\n  renderContent() {\n    if (this.state.errorMessage && !this.state.lat) {\n      return <div>Error: {this.state.errorMessage}</div>;\n    }\n    if (!this.state.errorMessage && this.state.lat) {\n      return <SeasonDisplay lat={this.state.lat} />;\n    }\n\n    return <Spinner message=\"Loading...\" />;\n  }\n\n  ///////////\n  render() {\n    return <div>{this.renderContent()}</div>;\n  }\n}\nReactDom.render(<App />, document.querySelector(\"#root\"));\n"]},"metadata":{},"sourceType":"module"}