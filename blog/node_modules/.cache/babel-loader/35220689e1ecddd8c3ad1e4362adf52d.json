{"ast":null,"code":"var _jsxFileName = \"/Users/guillermoelgorriaga/Desktop/new react course/blog/src/components/UserHeader.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchUser } from '../actions';\n\nclass UserHeader extends Component {\n  componentDidMount() {\n    this.props.fetchUser(this.props.userId);\n  }\n\n  render() {\n    const user = this.props.users.find(user => user.id === this.props.userId);\n\n    if (!user) {\n      return null;\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"User Header\");\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    users: state.users\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchUser\n})(UserHeader);","map":{"version":3,"sources":["/Users/guillermoelgorriaga/Desktop/new react course/blog/src/components/UserHeader.js"],"names":["React","Component","connect","fetchUser","UserHeader","componentDidMount","props","userId","render","user","users","find","id","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,SAAR,QAAwB,YAAxB;;AAEC,MAAMC,UAAN,SAAyBH,SAAzB,CAAmC;AAC/BI,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWH,SAAX,CAAqB,KAAKG,KAAL,CAAWC,MAAhC;AACH;;AAEFC,EAAAA,MAAM,GAAG;AACL,UAAMC,IAAI,GAAG,KAAKH,KAAL,CAAWI,KAAX,CAAiBC,IAAjB,CAAuBF,IAAD,IAASA,IAAI,CAACG,EAAL,KAAY,KAAKN,KAAL,CAAWC,MAAtD,CAAb;;AAEA,QAAI,CAACE,IAAL,EAAU;AACN,aAAO,IAAP;AACH;;AACD,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ;AAKH;;AAhB+B;;AAmBpC,MAAMI,eAAe,GAAGC,KAAK,IAAG;AAC5B,SAAO;AAACJ,IAAAA,KAAK,EAAEI,KAAK,CAACJ;AAAd,GAAP;AACH,CAFD;;AAGA,eAAeR,OAAO,CAACW,eAAD,EAAkB;AAACV,EAAAA;AAAD,CAAlB,CAAP,CAAsCC,UAAtC,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport {connect} from 'react-redux';\nimport {fetchUser} from '../actions';\n\n class UserHeader extends Component {\n     componentDidMount() {\n         this.props.fetchUser(this.props.userId);\n     }\n     \n    render() {\n        const user = this.props.users.find((user)=> user.id === this.props.userId);\n\n        if (!user){\n            return null;\n        }\n        return (\n            <div>\n                User Header\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state =>{\n    return {users: state.users};\n}\nexport default connect(mapStateToProps, {fetchUser})(UserHeader);\n"]},"metadata":{},"sourceType":"module"}